rm(list = ls())

#load packages
x = c("RODBC", "dplyr", "tidyr", "stringr")

lapply(x, library, character.only = T)

#connect to database
db <- odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=//EDU-FileServer/HomeDirs/dduffy/My Documents/Data/RDD Exiting Effects/Database/Exit Effects.accdb")

#set home directory

homedir <- "//EDU-FileServer/HomeDirs/dduffy/My Documents/Data/RDD Exiting Effects"

setwd(homedir)

#define trim function
trim <- function (x) gsub("^\\s+|\\s+$", "", x)

#Define right extract function
substrRight <- function(x, n){
  
  substr(x, nchar(x)-n+1, nchar(x))

}

#read in list of district names
DISTRICT_NAMES <- trim(readLines("DISTRICT_LIST.txt"))


#Read in column names
setwd(paste(homedir, "/COLUMN NAMES", sep = ""))

FILE_NAMES <- list.files(pattern = ".txt")

#create blank file list
FILE_LIST <- character()

for(FILE in FILE_NAMES){
  
  pos <- str_locate(FILE, "\\.")[1]
  
  NAME.USE <- substr(FILE, 1, pos-1)
  
  FILE_LIST <- append(FILE_LIST, NAME.USE)
  
  assign(NAME.USE, read.table(file = FILE, sep = "\t", quote = "\"", header = T))

  assign(paste("COLUMNS_", NAME.USE, sep = ""), colnames(get(NAME.USE)))
  
}

rm(list = FILE_LIST)


#create list of years

YEARS <- c("2012", "2013", "2014", "2015", "2016")


#create empty data frame for 2012 language codes from each district
# MARSSSTATEREPORTINGNUMBER <- character()
# LANGUAGECODE <- character()
# 
# LANGUAGE_CODES <- data.frame(MARSSSTATEREPORTINGNUMBER, LANGUAGECODE)


#combine data files 


for(YEAR in YEARS){
  
  count = 1

  
  for(DISTRICT in DISTRICT_NAMES){
    
    #adjust file names to get the file that has been read into r
    
#     files_access <- list()
#     
#     for(FILE in FILE_NAMES){
#       
#       if(str_detect(FILE, YEAR) == T){
#         
#         pos <- str_locate(FILE, "\\.")[1]
#         
#         NAME.USE <- substr(FILE, 1, pos-1)
#         
#         files_access <- append(files_access, NAME.USE)
#         
#       }
#       
#     }
    
    setwd(paste(homedir, DISTRICT, sep = "/"))
    
    #Grab 2012 language codes
    
#     if(YEAR == 2012){
#       
#       ACCESS <- read.table(file = "ACCESS_2012.tab", sep = "\t", quote = "\"", colClasses = c(V18 = "character", V10 = "character"))
#       
#       colnames(ACCESS) <- COLUMNS_ACCESS_2012
#       
#       DISTRICT_LANGUAGE_CODES <- select(ACCESS, MARSSSTATEREPORTINGNUMBER, LANGUAGECODE)
#       
#       LANGUAGE_CODES <- rbind(LANGUAGE_CODES, DISTRICT_LANGUAGE_CODES)
#       
#     }
    
    FILE_NAMES <- list.files(pattern = paste("*", YEAR, sep = ""))
    
    files_access <- list()
    
    for(FILE in FILE_NAMES){
      
      pos <- str_locate(FILE, "\\.")[1]
      
      NAME.USE <- substr(FILE, 1, pos-1)
      
      files_access <- append(files_access, NAME.USE)
      
      DATA.USE <- read.table(file = FILE, sep = "\t", quote = "\"", colClasses = c(V18 = "character", V10 = "character"))
      
      COLUMNS_USE <- get(paste("COLUMNS_", NAME.USE, sep = ""))
      
      colnames(DATA.USE) <- COLUMNS_USE
      
      
      if(str_detect(FILE, "READING") == T & YEAR == "2012"){
        
        DATA.USE <- filter(DATA.USE, TESTNAME == "MCA-II")
        
      }
      
      if(str_detect(FILE, "READING") == T & YEAR == "2013" | 
         str_detect(FILE, "READING") == T & YEAR == "2014" | 
         str_detect(FILE, "READING") == T & YEAR == "2015" | 
         str_detect(FILE, "READING") == T & YEAR == "2016"){
        
        DATA.USE <- filter(DATA.USE, TESTNAME == "MCA-III")
        
      }
      
      if(str_detect(FILE, "MATH") == T){
        
        DATA.USE <- filter(DATA.USE, TESTNAME == "MCA-III")
        
      }
      
      assign(NAME.USE, DATA.USE)
    
    }

    for(FILE in files_access){
      
      DATA.USE <- get(FILE)
      
      #filter to only include valid scores
      DATA.USE <- filter(DATA.USE, TESTCODE == "VS")
      
      #filter out blank MARSS numbers
      DATA.USE <- filter(DATA.USE, MARSSSTATEREPORTINGNUMBER != "")
      
      #extract subject from file name
      
      pos <- str_locate(FILE, "_")
      
      FILE_SUBJECT <- substr(FILE, 1, pos-1)
      
      if(FILE_SUBJECT == "ACCESS"){
        
        SPARE_ACCESS <- DATA.USE 
        
        DATA.USE <- DATA.USE %>%
          group_by(MARSSSTATEREPORTINGNUMBER) %>%
          filter(n() == 5) %>%
          mutate(SUBJECT = FILE_SUBJECT, 
                 SCORE1 = SCORE1/100,
                 YEAR = YEAR, 
                 SPED = ifelse(SPEFLAG == "Y", 1, 0), 
                 FRP = ifelse(FRPFLAG == "Y", 1, 0), 
                 LEP = ifelse(LEPFLAG == "Y", 1, 0), 
                 FEMALE = ifelse(GENDER == "F", 1, 0)) %>%
          select(MARSSSTATEREPORTINGNUMBER, SCORE1, TESTSUBJECT, SPED, FRP, LEP, FEMALE) %>%
          spread(TESTSUBJECT, SCORE1) %>%
          rename(ACCESS_COMPOSITE_SCALE = C, 
                 ACCESS_READING_SCALE = R, 
                 ACCESS_LISTENING_SCALE = L, 
                 ACCESS_SPEAKING_SCALE = S, 
                 ACCESS_WRITING_SCALE = W)
        
        SPARE_ACCESS <- SPARE_ACCESS %>%
          group_by(MARSSSTATEREPORTINGNUMBER) %>%
          filter(n() == 5) %>%
          mutate(SCORE2 = SCORE2/100) %>%
          select(MARSSSTATEREPORTINGNUMBER, SCORE2, TESTSUBJECT, GRADE) %>%
          spread(TESTSUBJECT, SCORE2) %>%
          rename(COMPOSITE_LEVEL = C, 
                 READING_LEVEL = R, 
                 LISTENING_LEVEL = L, 
                 SPEAKING_LEVEL = S, 
                 WRITING_LEVEL = W) %>%
          mutate(ACCESS_PROFICIENT = ifelse(COMPOSITE_LEVEL >= 5 & LISTENING_LEVEL >= 4 &
                                              READING_LEVEL >= 4 & SPEAKING_LEVEL >= 4 &
                                              WRITING_LEVEL >= 4, 1, 0))
        
        DATA.USE <- left_join(DATA.USE, SPARE_ACCESS, by = c("MARSSSTATEREPORTINGNUMBER"))
        
#         colnames(DATA.USE)[2:12] <- paste(colnames(DATA.USE)[2:12], YEAR, sep = "_")
        
        assign(FILE, DATA.USE)
        
      }
      
      else if(FILE_SUBJECT == "READING"){
        
        DATA.USE <- DATA.USE %>%
          mutate(SPED = ifelse(SPEFLAG == "Y", 1, 0), 
                 FRP = ifelse(FRPFLAG == "Y", 1, 0), 
                 LEP = ifelse(LEPFLAG == "Y", 1, 0), 
                 READING_PROFICIENT = ifelse(ACHIEVEMENTLEVEL == "M" | ACHIEVEMENTLEVEL == "E", 1, 0), 
                 FEMALE = ifelse(GENDER == "F", 1, 0)) %>%
          select(MARSSSTATEREPORTINGNUMBER, SCORE1, FRP, FEMALE, SPED, READING_PROFICIENT, GRADE, LEP) %>%
          rename(READING_SCALE = SCORE1)
        
        DATA.USE$READING_SCALE <- as.numeric(substrRight(DATA.USE$READING_SCALE, 4))/100
        
#         colnames(DATA.USE)[grep("SCORE1", colnames(DATA.USE))] <- paste(FILE_SUBJECT, "_SCALE_", YEAR, sep = "")
#         colnames(DATA.USE)[grep("PROFICIENT", colnames(DATA.USE))] <- paste(FILE_SUBJECT, "_PROFICIENT_", YEAR, sep = "")
#         colnames(DATA.USE)[grep("LEP", colnames(DATA.USE))] <- paste("LEP_", YEAR, sep = "")
#         colnames(DATA.USE)[grep("SPED", colnames(DATA.USE))] <- paste("SPED_", YEAR, sep = "")
#         colnames(DATA.USE)[grep("GRADE", colnames(DATA.USE))] <- paste("GRADE_", YEAR, sep = "")
#         colnames(DATA.USE)[grep("FRP", colnames(DATA.USE))] <- paste("FRP_", YEAR, sep = "")
#         
        assign(FILE, DATA.USE)
        
      }
      
      else{
        
        
        DATA.USE <- DATA.USE %>%
          mutate(MATH_PROFICIENT = ifelse(ACHIEVEMENTLEVEL == "M" | ACHIEVEMENTLEVEL == "E", 1, 0), 
                 SPED = ifelse(SPEFLAG == "Y", 1, 0), 
                 FRP = ifelse(FRPFLAG == "Y", 1, 0), 
                 LEP = ifelse(LEPFLAG == "Y", 1, 0), 
                 FEMALE = ifelse(GENDER == "F", 1, 0)) %>%
          select(MARSSSTATEREPORTINGNUMBER, SCORE1, MATH_PROFICIENT, GRADE, SPED, FRP, LEP, FEMALE) %>%
          rename(MATH_SCALE = SCORE1)
        
        DATA.USE$MATH_SCALE <- as.numeric(substrRight(DATA.USE$MATH_SCALE, 4))/100
        
#         colnames(DATA.USE)[grep("SCORE1", colnames(DATA.USE))] <- paste(FILE_SUBJECT, "_SCALE_", YEAR, sep = "")
#         colnames(DATA.USE)[grep("PROFICIENT", colnames(DATA.USE))] <- paste(FILE_SUBJECT, "_PROFICIENT_", YEAR, sep = "")
#         
        
        assign(FILE, DATA.USE)
        
        
      }
      
    }
   
    if(count == 1){
      
      ACCESS_COMBINE <- get(paste("ACCESS_", YEAR, sep = ""))
      READING_COMBINE <- get(paste("READING_", YEAR, sep = ""))
      MATH_COMBINE <- get(paste("MATH_", YEAR, sep = ""))
      
      COMBINED_DATA <- ACCESS_COMBINE %>%
        full_join(READING_COMBINE, by = c("MARSSSTATEREPORTINGNUMBER", "GRADE", "FEMALE", "SPED", "FRP", "LEP")) %>%
        full_join(MATH_COMBINE, by = c("MARSSSTATEREPORTINGNUMBER", "GRADE", "FEMALE", "SPED", "FRP", "LEP")) %>%
        #left_join(LANGUAGE_CODES, by = "MARSSSTATEREPORTINGNUMBER") %>%
        mutate(YEAR = YEAR,
               DISTRICT = DISTRICT) %>%
        group_by(MARSSSTATEREPORTINGNUMBER) %>%
        filter(n() == 1)
      
    }
    
    else{
      
      ACCESS_COMBINE <- get(paste("ACCESS_", YEAR, sep = ""))
      READING_COMBINE <- get(paste("READING_", YEAR, sep = ""))
      MATH_COMBINE <- get(paste("MATH_", YEAR, sep = ""))
      
      DATA_BIND <- ACCESS_COMBINE %>%
        full_join(READING_COMBINE, by = c("MARSSSTATEREPORTINGNUMBER", "GRADE", "FEMALE", "SPED", "FRP", "LEP")) %>%
        full_join(MATH_COMBINE, by = c("MARSSSTATEREPORTINGNUMBER", "GRADE", "FEMALE", "SPED", "FRP", "LEP")) %>%
        #left_join(LANGUAGE_CODES, by = "MARSSSTATEREPORTINGNUMBER") %>%
        mutate(YEAR = YEAR, 
               DISTRICT = DISTRICT) %>%
        group_by(MARSSSTATEREPORTINGNUMBER) %>%
        filter(n() == 1)
      
      COMBINED_DATA <- rbind(COMBINED_DATA, DATA_BIND)
      
    }
    
    count = count + 1
     
  }
  
  sqlSave(db, COMBINED_DATA, tablename = paste("COMBINED_", YEAR, sep = ""), append = F, rownames = F)
  
  
}

#reset working directory
setwd(homedir)

#clean up the workspace
objects.keep <- c("homedir", "DISTRICT_NAMES", "trim", "substrRight", "COLUMNS_ACCESS_2012")

objects.remove <- !(ls() %in% objects.keep)
objects.remove <- ls()[objects.remove]

rm(list = objects.remove)

#create language lists

#create empty data frame for 2012 language codes from each district
MARSSSTATEREPORTINGNUMBER <- character()
LANGUAGECODE <- character()

LANGUAGE_CODES <- data.frame(MARSSSTATEREPORTINGNUMBER, LANGUAGECODE)

for(DISTRICT in DISTRICT_NAMES){
  
  setwd(paste(homedir, DISTRICT, sep = "/"))
  
  ACCESS <- read.table(file = "ACCESS_2012.tab", sep = "\t", quote = "\"", colClasses = c(V18 = "character"))
  
  colnames(ACCESS) <- COLUMNS_ACCESS_2012
  
  ACCESS <- select(ACCESS, MARSSSTATEREPORTINGNUMBER, LANGUAGECODE) 
  
  LANGUAGE_CODES <- rbind(LANGUAGE_CODES, ACCESS)
  
}

LANGUAGE_CODES <- unique(LANGUAGE_CODES)

#remove any duplicate students

LANGUAGE_CODES <- LANGUAGE_CODES %>%
  group_by(MARSSSTATEREPORTINGNUMBER) %>%
  filter(n() == 1)

sqlSave(db, LANGUAGE_CODES, tablename = "LANGUAGE_CODES", append = F, rownames = F)

#Create separate tables for ACCESS data in the database

FILE_LIST <- c("COMBINED_2012", "COMBINED_2013", "COMBINED_2014", "COMBINED_2015", "COMBINED_2016")

for(FILE in FILE_LIST){
  
  DATA.USE <- sqlQuery(db, paste("SELECT * FROM ", FILE), as.is = T)
  
  DATA.USE <- DATA.USE %>%
    filter(LEP == "1") %>%
    select(MARSSSTATEREPORTINGNUMBER, ACCESS_COMPOSITE_SCALE, ACCESS_LISTENING_SCALE, ACCESS_READING_SCALE, ACCESS_WRITING_SCALE, 
           ACCESS_SPEAKING_SCALE, COMPOSITE_LEVEL, LISTENING_LEVEL, READING_LEVEL, SPEAKING_LEVEL, WRITING_LEVEL, ACCESS_PROFICIENT)
  
  pos <- str_locate(FILE, "_")[1]
  
  YEAR <- substr(FILE, pos + 1, str_length(FILE))
  
  
  sqlSave(db, DATA.USE, tablename = paste("ACCESS_", YEAR, sep = ""), append = F, rownames = F)
  
}




odbcClose(db)
